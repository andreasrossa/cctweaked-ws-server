# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build

on: 
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG: latest

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Cache NPM dependencies
      uses: actions/cache@v1
      with:
        path: '**/node_modules'
        key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-
    - name: Run yarn install
      run: yarn install --fixed-lockfile
    - name: Run build
      run: yarn build
    - name: Run tests 
      run: yarn ci:test
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: JEST Tests            # Name of the check run which will be created
        path: junit.xml    # Path to test results
        reporter: jest-junit
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: |
          dist
          Dockerfile
          package.json
          yarn.lock

  dockerize:
    needs: build
    runs-on: ubuntu-latest

    steps: 
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache